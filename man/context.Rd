% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/context.R
\name{context}
\alias{context}
\title{Build a context object}
\usage{
context(...)
}
\arguments{
\item{...}{named character vectors, or other context ojects (named or not).
These dots are dynamic in the rlang sense (\code{?rlang::`dyn-dots` }) so they
can be conveniently named using glue syntax and \verb{:=}.}
}
\value{
An object of class \code{"ask_context"}
}
\description{
Build an object of class "ask_context" to be used in the \code{context} argument.
of \verb{ask*} functions. Most of the time using the provided \verb{context_*()} functions
is sufficient.
}
\details{
\code{context()} can be used :
\itemize{
\item To combine existing contexts, as in  \code{context(context1, context2)}
\item To define a completely new context as in
\item To nest contexts as in \code{context("new label" = context(context1, context2))}
\item For any combination of the above
}

They are implemented as nested lists so the labels can be numbered when flattened
internally in \verb{ask*()} functions or when printing them. Run examples below to see
how this works.
}
\examples{
context_smith <- context(
  "Smith family" =
    "The Smith family is John, Wendy, and their 3 kids Boris, Judith and Michael."
)
context_johnson <- context("Johnson family" = "The Johnson family is Robert and his sister Brenda.")
context_house <- context(
  "House" =
    "The Smiths and the Johnsons live in the same house, called 'the happy place',"
)
context_johnson
full_context <- context(
  Families = context(context_smith, context_johnson),
  context_house
)
full_context
\dontrun{
ask("What are the names of the kids that live in the happy place", context = full_context)
ask_numeric("How many people live in the happy place?", context = full_context)
ask_boolean("Are Robert and Brenda related?", context = full_context)
}
}
